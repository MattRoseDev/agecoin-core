type CurrentTask {
  id: ID!
  userId: ID!
  taskId: ID!
  description: String
  defaultCoins: Int!
  coins: Int
  status: Int!
  active: Boolean
  createdAt: Time!
  updatedAt: Time!
}

input AddCurrentTaskInput {
  taskId: ID!
  active: Boolean
}

input EditCurrentTaskInput {
  taskId: ID!
  description: String
  defaultCoins: Int
}

extend type Query {
  getCurrentTasks: [CurrentTask]
  getCurrentTask(currentTaskId: ID!): CurrentTask
}

extend type Mutation {
  AddCurrentTask(input: AddCurrentTaskInput!): CurrentTask
  EditCurrentTask(currentTaskId: ID!, input: EditCurrentTaskInput!): CurrentTask
  deleteCurrentTask(currentTaskId: ID!): CurrentTask
  startCurrentTask(currentTaskId: ID!): CurrentTask
  pauseCurrentTask(currentTaskId: ID!): CurrentTask
  finishCurrentTask(currentTaskId: ID!): CurrentTask
}
