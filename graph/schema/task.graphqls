type Task {
  id: ID!
  userId: ID!
  title: String!
  description: String
  defaultCoins: Int!
  coins: Int
  status: Int!
  active: Boolean!
  createdAt: Time!
  updatedAt: Time!
}

input AddTaskInput {
  title: String!
  description: String
  defaultCoins: Int!
}

input GetTasksFilter {
  status: Int
}

input EditTaskInput {
  title: String
  description: String
  defaultCoins: Int
  coins: Int
}

input FinishTaskInput {
  title: String
  description: String
  coins: Int
}

extend type Query {
  getTasks(filter: GetTasksFilter): [Task]
  getTask(taskId: ID!): Task
}

extend type Mutation {
  addTask(input: AddTaskInput!): Task
  editTask(taskId: ID!, input: EditTaskInput!): Task
  deleteTask(taskId: ID!): Task
  startTask(taskId: ID!): Task
  pauseTask(taskId: ID!): Task
  finishTask(taskId: ID!, input: FinishTaskInput): Task
}
